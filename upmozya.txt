
$(".commandBarWrapper").css("display", "block");
-------------------
.dealContainer {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  font-family: 'Segoe UI', sans-serif;
  max-width: 100%;
  height: 100vh; // Full-screen display
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.dealTitle {
  font-size: 32px;
  color: #333;
  margin-bottom: 15px;
}

.imageWrapper {
  width: 100%;
  max-height: 400px;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(to bottom right, #0078D4, #005a9e);
  border-radius: 6px;
}

.dealImage {
  width: 100%;
  max-height: 400px;
  object-fit: cover;
  border-radius: 6px;
}

.dealInfo {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-top: 15px;

  .dealCategory, .dealExpiry {
    display: flex;
    align-items: center;
    font-size: 18px;
  }
}

.icon {
  font-size: 22px;
  color: #0078D4;
}

.dealDetails {
  font-size: 20px;
  color: #444;
  padding: 15px;
  margin-top: 10px;
  border-top: 1px solid #ddd;
}

.eventLink {
  display: block;
  background: #0078D4;
  color: white;
  padding: 12px;
  text-align: center;
  border-radius: 6px;
  text-decoration: none;
  margin-top: 15px;

  &:hover {
    background: #005a9e;
  }
}

.backLink {
  display: block;
  text-align: center;
  color: #0078D4;
  font-size: 18px;
  margin-top: 25px;

  &:hover {
    color: #005a9e;
  }
}







------


import { Version } from '@microsoft/sp-core-library';
import {
  BaseClientSideWebPart,
  IPropertyPaneConfiguration,
  PropertyPaneTextField
} from '@microsoft/sp-webpart-base';
import { escape } from '@microsoft/sp-lodash-subset';

import styles from './OqMozyaDisplayWebPart.module.scss';
import * as strings from 'OqMozyaDisplayWebPartStrings';
import { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';

export interface IOqMozyaDisplayWebPartProps {
  listName: string;
}

export interface IDealItem {
  Title: string;
  ExpireDate: string;
  ImageURL: string;
  EventLink: string;
  Details: string;
  Category: string;
  Modified: string;
}

export default class OqMozyaDisplayWebPart extends BaseClientSideWebPart<IOqMozyaDisplayWebPartProps> {

  private getQueryStringParam(name: string): string | null {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(name);
  }


  private async getDealItem(): Promise<IDealItem | null> {
    const itemId = this.getQueryStringParam("MozyaID");
    if (!itemId || !this.properties.listName) return null;


    alert(itemId);
    const requestUrl = `${this.context.pageContext.web.absoluteUrl}/_api/web/lists/getbytitle('${this.properties.listName}')/items(${itemId})`;

    const response: SPHttpClientResponse = await this.context.spHttpClient.get(requestUrl, SPHttpClient.configurations.v1);
    if (!response.ok) return null;

    const result = await response.json();
    return {
      Title: result.Title,
      ExpireDate: new Date(result.ExpireDate).toLocaleDateString(),
      ImageURL: result.ImageURL ? result.ImageURL.Url : '',
      EventLink: result.EventLink ? result.EventLink.Url : '',
      Details: result.Details,
      Category: result.Category,
      Modified: new Date(result.Modified).toLocaleDateString()
    };
  }

  public async render(): Promise<void> {
    const dealItem = await this.getDealItem();
    if (!dealItem) {
      this.domElement.innerHTML = `<p>No deal found in list: <strong>${this.properties.listName}</strong></p>`;
      return;
    }

     // Remove the page header element
  const headerElement = document.querySelector('[data-automation-id="pageHeader"]');
  if (headerElement) {
    headerElement.remove();
  }

  const fallbackImage = "http://win-hvbmj3otuqb/Style%20Library/images/background/5268821.jpg";

  this.domElement.innerHTML = `
    <div class="${styles.dealContainer}">
      <h1 class="${styles.dealTitle}">${dealItem.Title}</h1>

      <div class="${styles.imageWrapper}">
        <img src="${dealItem.ImageURL ? dealItem.ImageURL : fallbackImage}"
             alt="${dealItem.Title}" class="${styles.dealImage}" />
      </div>

      <div class="${styles.dealInfo}">
        <div class="${styles.dealCategory}">
          <span class="${styles.icon}">&#128195;</span>
          <span>${dealItem.Category}</span>
        </div>
        <div class="${styles.dealExpiry}">
          <span class="${styles.icon}">&#128197;</span>
          <span>${dealItem.ExpireDate}</span>
        </div>
      </div>

      <p class="${styles.dealDetails}">${dealItem.Details}</p>

      ${dealItem.EventLink
        ? `<a href="${dealItem.EventLink}" target="_blank" class="${styles.eventLink}">More Details</a>`
        : ''}

      <a href="javascript:history.back()" class="${styles.backLink}">Back</a>
    </div>
  `;



  }


  protected get dataVersion(): Version {
    return Version.parse('1.0');
  }

  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {
    return {
      pages: [
        {
          header: {
            description: "Configure your list"
          },
          groups: [
            {
              groupName: "Settings",
              groupFields: [
                PropertyPaneTextField("listName", {
                  label: "SharePoint List Name",
                  description: "Enter the name of the list containing deal items."
                })
              ]
            }
          ]
        }
      ]
    };
  }

}






.news-section .owl-nav .owl-next{
	position:relative;
	width:35px;
	height:35px;
	display:inline-block;
	background:url(../images/icons/left-arrow.png) no-repeat;
	background-size: contain;
	transition:all 500ms ease;
	-moz-transition:all 500ms ease;
	-webkit-transition:all 500ms ease;
	-ms-transition:all 500ms ease;
	-o-transition:all 500ms ease;
	  transform: rotate(180deg); /* This rotates the element */
	
}
